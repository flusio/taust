#!/bin/env php
<?php

/**
 * @author Marien Fressinaud <dev@marienfressinaud.fr>
 * @license http://www.gnu.org/licenses/agpl-3.0.en.html AGPL
 */

if (php_sapi_name() !== 'cli') {
    die('This script must be called from command line.');
}

// Setup the Minz framework
$app_path = __DIR__;

include $app_path . '/autoload.php';
\Minz\Configuration::load('dotenv', $app_path);
\Minz\Environment::initialize();

// Read command line parameters to create a Request
$command = [];
$parameters = [];

// We need to skip the first argument which is the name of the script
$arguments = array_slice($argv, 1);
foreach ($arguments as $argument) {
    $result = preg_match('/^--(?P<option>\w+)(=(?P<argument>.+))?$/sm', $argument, $matches);
    if ($result) {
        $parameters[$matches['option']] = $matches['argument'] ?? true;
    } else {
        $command[] = $argument;
    }
}

$request_uri = implode('/', $command);
if (!$request_uri) {
    $request_uri = '/help';
} elseif ($request_uri[0] !== '/') {
    $request_uri = '/' . $request_uri;
}

try {
    $request = new \Minz\Request('cli', $request_uri, $parameters);
} catch (\Minz\Errors\RequestError $e) {
    die($e->getMessage() . "\n");
}

$request->setParam('bin', $argv[0]);

// Initialize the Application and execute the request to get a Response
$application = new \taust\cli\Application();
$response = $application->run($request);

// Display the response
$output = $response->render();
if ($output && $output[-1] === "\n") {
    echo $output;
} elseif ($output) {
    echo $output . "\n";
}

$code = $response->code();
if ($code >= 200 && $code < 300) {
    exit(0);
} else {
    exit(1);
}
